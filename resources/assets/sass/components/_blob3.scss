$home-visual-size: 30rem;
$home-blob-length: 8;

$home-explosion-base-size: 200px;
$home-explosion-desired-size: 600px;
$home-explosion-multiplier: $home-explosion-desired-size / $home-explosion-base-size;
$home-explosion-frames: 12;

@function randomNum($min, $max) {
  $rand: random();
  $randomNum: $min + floor($rand * (($max - $min) + 1));
  @return $randomNum;
}

.home-header-background {
  background: $base-bg-color-light;
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  z-index: 0;
  pointer-events: none;
  @include transition('sm');

  .dark & {
    background: $base-bg-color-dark;
  }
}

.home-header-visual {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: $home-visual-size;
  height: $home-visual-size;
  margin: auto;
  cursor: pointer;

  .dark & {
    opacity: 0.5;
  }
  &-svg-wrap {
    position: relative;
    z-index: 1;
    width: $home-visual-size;
    height: $home-visual-size;
    transition: all 0.5s cubic-bezier(0.3, 1.65, 0.205, 0.795);
    //border: 1px solid red;
  }

  &:hover .home-header-visual-svg-wrap {
    transform: scale(1.25);
  }
  &.hidden .home-header-visual-svg-wrap {
    transition: all 0.15s ease-in;
    transform: scale(0);
  }

  svg {
    width: 100%;
    height: 100%;
    max-height: 100vh;
    animation: rotate 60s linear;
  }

  .blob circle {
    will-change: transform, r;
    mix-blend-mode: soft-light;

    $top-collection: [];
    $left-collection: [];

    @for $i from 1 to 20 {
      $randWH: randomNum(30px, 100px);
      $offset: 100px/$randWH * 20px;
      $left: randomNum(-$offset, $offset);
      $top: randomNum(-$offset, $offset);
      $left-collection: append($left-collection, $left);
      $top-collection: append($top-collection, $top);
      &:nth-of-type(#{$i}) {
        r: $randWH;
      }
    }

    @for $i from 1 to $home-blob-length + 1 {
      &:nth-of-type(#{$i}) {
        animation: anim-#{$i} 15s ease-in-out infinite;
        animation-delay: randomNum(0.5s, 1s);
      }
      @keyframes anim-#{$i} {
        0% {
          transform: translate(0, 0);
        }
        50% {
          transform: translate(nth($left-collection, $i), nth($top-collection, $i+1));
        }
        100% {
          transform: translate(0, 0);
        }
      }
    }
  }
}

.home-header-explosion {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: $home-explosion-base-size * $home-explosion-multiplier;
  height: $home-explosion-base-size * $home-explosion-multiplier;
  background: url('../img/visuals/explosion-sprite.svg') left;
  background-size: $home-explosion-desired-size * ($home-explosion-frames + 1) $home-explosion-desired-size;
  animation: none;
  &.show {
    animation: explode 0.85s steps($home-explosion-frames);
    animation-delay: 0.15s;
  }
}

@keyframes explode {
  100% {
    background-position: -$home-explosion-desired-size * $home-explosion-frames;
  }
}
@keyframes rotate {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
